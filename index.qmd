---
title: "LQCD @ PASC23"
author: "Sam Foreman"
date: "2023-06-05"
bibliography: references.bib
format:
  revealjs:
    slide-number: true
    preview-links: true
    controls: false
    logo: "https://raw.githubusercontent.com/saforem2/anl-job-talk/main/docs/assets/anl.svg"
    history: false
    margin: 0.1
    theme: [dark, custom.scss]
    css: [css/default.css, css/callouts.css, css/code-callout.css]
    self-contained: false
    embed-resources: false
    self-contained-math: false
    center: true
    highlight-style: "atom-one"
    default-image-extension: svg
    code-line-numbers: true
    code-overflow: scroll
    html-math-method: katex
    fig-align: center
    execute:
      freeze: auto
    mermaid:
      theme: neutral
---

# {.centeredslide background-iframe="https://saforem2.github.io/grid-worms-animation/" loading="lazy"}

::: {style="text-shadow: 0px 0px 10px RGBA(0, 0, 0, 0.45); background-color: rgba(22,22,22,0.88); border-radius: 10px; text-align:center; box-shadow:RGBA(0, 0, 0, 0.45) 0px 5px 15px; padding-top: 1em; padding-bottom: 1em;"}
<span style="color:#939393; font-size:1.5em; font-weight: bold; padding: 1pt 0pt;">Generative Modeling \& Efficient Sampling</span>

<span style="font-size:0.8em; color:#505050; padding:0px; margin:0px; text-align:center!important;">2023-06-29</span>  
<span style="font-size:0.8em; color:#505050; padding:0px; margin:0px; text-align:center!important;"> @ [PASC23](https://pasc23.pasc-conference.org/)</span>

[{{< fa solid home >}}](https://samforeman.me) Sam Foreman  
[{{< fa brands github >}} `saforem2/lqcd-pasc23`](https://github.com/saforem2/lqcd-pasc23)
:::

# Standard Model {auto-animate="true"}

:::: {.columns}

::: {.column width="60%"}
- [{{< fa solid bolt >}}]{.yellow-text} Electricity & Magnetism [{{< fa solid magnet >}}]{.red-text}
- <span class="purple">{{< fa solid atom >}}</span> Quantum Field Theory
  - Nuclear interactions
    - Strong + Weak Force
    - Observed particles
  - Quantum Chromodynamics (**QCD**):
    - Quark / gluon interactions in the nuclueus
    - Analytic progress is _difficult_...[^progress]
      - Lattice QCD to the rescue! üöÄ
:::

::: {.column width="40%"}

<!-- ![](https://github.com/saforem2/physicsSeminar/raw/main/assets/static/nucleus.svg){width="40%" style="text-align:right; margin-left:22%;"} -->

![$e^{+} + e^{-} \rightarrow 2\gamma$](https://github.com/saforem2/physicsSeminar/raw/main/assets/static/feynman.svg){width="100%"}

::: {style="font-size:0.8em"}
> Obviously, an independent cross-check of the BMW lattice result for
> $a_{\mu}^{\mathrm{hvp, LO}}$ with sub-percent precision is badly needed  
> --- [@wittig2023progress]
:::

:::

::::

[^progress]: Completely stalled ?

## {.centeredslide background-video="https://d2r55xnwy6nx47.cloudfront.net/uploads/2021/04/Muon_2560_Lede.mp4" background-video-loop="true" background-video-muted="true"}

::: {style="text-shadow: 0px 0px 10px black; background-color: rgba(22,22,22,0.33); border-radius: 10px; text-align:center; box-shadow:RGBA(0, 0, 0, 0.35) 0px 5px 15px; padding: 0px; padding-left: 1%; padding-right: 1%; max-width: min-content; min-width: max-content; margin-left: auto; margin-right: auto; padding-top: 1em;"}
<span style="font-size: 1.75em; font-weight: bold;">Magnetic Moment of the Muon</span>

::: {style="font-size: 1.5em; margin-top: 0pt; margin-bottom: 0pt; border:2px solid #00CCFF; border-radius:8px; margin-left:auto; margin-right:auto; min-width: max-content; max-width: min-content; padding-left: 1%; padding-right: 1%; background-color: rgba(22,22,22,0.5); "}
$a_{\mu} = \frac{(g_{\mu} - 2)}{2}$
:::

[$a_{\mu}^{\mathrm{exp}} - a_{\mu}^{\mathrm{SM}} = \left(25.1 \pm 5.9\right)\cdot 10^{-10}$]{.dim-text}

[Can Lattice QCD resolve this?]{.dim-text}

:::

## [Fermilab: Muon g-2](https://vms.fnal.gov/gallery/view?id=41) {style="top:0;"}

::: {.panel-tabset}

### The Ring

![](https://mod.fnal.gov/mod/stillphotos/2017/0100/17-0188-17.hr.jpg){width="80%" fig-align="center"}

### In transit

![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0232-09D.hr.jpg){width="80%" fig-align="center"}

### Almost Home

![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0235-18D.hr.jpg){width="80%" fig-align="center"}

### Arrival

![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0244-11D.hr.jpg){width="80%" fig-align="center"}

:::

# Markov Chain Monte Carlo (MCMC)

:::: {.columns}

::: {.column width="50%"}

::: {.callout-note title="Goal" style="text-align:left;!important"}
Generate **independent** samples $\{x_{i}\}$, s.t.[^notation]
$$\{x_{i}\} \sim p(x) \propto e^{-S(x)}$$
:::

- Want to calculate observables $\mathcal{O}$:  
  $\left\langle \mathcal{O}\right\rangle \propto \int \left[\mathcal{D}x\right]\hspace{4pt} {\mathcal{O}(x) e^{-S[x]}}$

:::

::: {.column width="49%"}
![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/normal_distribution.dark.svg)
:::

::::

If configurations were <span style="color:#00CCFF;">independent</span>, we could approximate[^approx]
  $$
  \left\langle\mathcal{O}\right\rangle \textcolor{#00CCFF}{\simeq} \frac{1}{N}\sum^{N}_{n=1}\mathcal{O}(x_{n})%
  \quad \textcolor{#00CCFF}{\Longrightarrow} \quad \sigma_{\mathcal{O}}^{2} = \frac{1}{N}\mathrm{Var}{\left[\mathcal{O} (x) \right]}%
  $$

[^notation]: Here, $\sim$ means "is distributed according to"
[^target]: Here, $S(x)$ is the action (~ potential energy) of our physical system
[^approx]: Our variance on this estimator is then $\sigma_{\mathcal{O}}^{2}$

# Hamiltonian Monte Carlo (HMC)[^hmc] {.centeredslide}

- Want to (sequentially) construct a chain of states:
  $$x_{0} \rightarrow x_{1} \rightarrow \cdots \rightarrow x_{N}\hspace{10pt}$$

  such that, as $N \rightarrow \infty$:
  $$\left\{x_{i}, x_{i+1}, x_{i+2}, \cdots, x_{N} \right\} \xrightarrow[]{N\rightarrow\infty} p(x)
  \propto e^{-S(x)}$$

::: {.callout-tip title="Trick" style="display:inline!important;"}
  - Introduce _fictitious_ momentum $v \sim \mathcal{N}(0, \mathbb{1})$
  - Normally distributed **independent** of $x$, i.e.
  $$\begin{align*}
    p(x, v) &\textcolor{#02b875}{=} p(x)p(v) \propto e^{-S{(x)}} e^{-\frac{1}{2} v^{T}v}
   	= e^{-\left[S(x) + \frac{1}{2} v^{T}{v}\right]}
   	\textcolor{#02b875}{=} e^{-H(x, v)}
  \end{align*}$$
:::

[^hmc]: Fun fact: HMC was _originally_ invented for LQCD! [@Duane:1987de]
<!-- [Hybrid Monte Carlo, Duane et. al Phys.Lett.B 195 (1987)](https://www.sciencedirect.com/science/article/pii/037026938791197X?via=ihub) -->


# Hamiltonian Monte Carlo (HMC) {.centeredslide}

:::: {.columns}

::: {.column width="55%"}

- [**Idea**]{.green-text}: Evolve the $(\dot{x}, \dot{v})$ system to get new states $\{x_{i}\}$‚ùó

- Write the **joint distribution** $p(x, v)$:
  $$
  p(x, v) \propto e^{-S[x]} e^{-\frac{1}{2}v^{T} v} = e^{-H(x, v)}
  $$
:::

::: {.column width="45%"}

::: {.callout-tip title="Hamiltonian Dynamics"}
$H = S[x] + \frac{1}{2} v^{T} v \Longrightarrow$
$$\dot{x} = +\partial_{v} H,
\,\,\dot{v} = -\partial_{x} H$$
:::

:::

::::

![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/hmc1.svg)

# Leapfrog Integrator (HMC) {.centeredslide}

:::: {.columns style="text-align:center;"}

::: {.column width="50%"}

::: {.callout-tip title="Hamiltonian Dynamics" style="font-size:1.1em;"}
$\left(\dot{x}, \dot{v}\right) = \left(\partial_{v} H, -\partial_{x} H\right)$
:::

::: {.callout-note title="Leapfrog Step"}

[input]{.dim-text style="font-family:monospace;"} $\,\left(x, v\right) \rightarrow \left(x', v'\right)\,$ [output]{.dim-text style="font-family:monospace;"}

$$\begin{align*}
\tilde{v} &:= \textcolor{#FB6896}{\Gamma}(x; v)\hspace{2.2pt} = v - \frac{\varepsilon}{2} \partial_{x} S(x) \\
x' &:= \textcolor{#A64F00}{\Lambda}(x; \tilde{v}) \, =  x + \varepsilon \, \tilde{v} \\
v' &:= \textcolor{#FB6896}{\Gamma}(x'; \tilde{v}) = \tilde{v} - \frac{\varepsilon}{2} \partial_{x} S(x')
\end{align*}$$

:::

::: {.callout-warning title="Warning!"}
[Resample $v_{0} \sim \mathcal{N}(0, \mathbb{1})$]{style="text-align:left;"}  
[at the [beginning]{.yellow-text} of each trajectory]{style="text-align:left;"}

:::

:::

::: {.column width="49%" style="text-align:left;"}
![](./assets/hmc/hmc-update-dark.svg){width=60%}
:::

::::

[^eps]: Of step size $\varepsilon$

::: {.aside}
**Note**: The gradient of the action, $\partial_{x} S(x)$ is called the _force_
:::


# HMC Update

:::: {.columns}

::: {.column width="65%"}
- We build a trajectory of $N_{\mathrm{LF}}$ **leapfrog steps**[^v0]
  $$\begin{equation*}
  (x_{0}, v_{0})%
  \rightarrow (x_{1}, v_{1})\rightarrow \cdots%
  \rightarrow (x', v')
  \end{equation*}$$

- And propose $x'$ as the next state in our chain
<!-- - which is _accepted_ (or rejected) via Metroplis-Hastings[^accept] -->
<!-- - $x'$ is proposed with probability $A(x'|x)$[^accept] -->
<!-- - Use $x'$ as our proposal in the Metropolis-Hastings accept / reject, $A(x'|x)$ -->

$$\begin{align*}
  \textcolor{#FB6896}{\Gamma}: (x, v) \textcolor{#FB6896}{\rightarrow} v' &:= v - \frac{\varepsilon}{2} \partial_{x} S(x) \\
  \textcolor{#A64F00}{\Lambda}: (x, v) \textcolor{#A64F00}{\rightarrow} x' &:= x + \varepsilon v
\end{align*}$$

- We then accept / reject $x'$ using Metropolis-Hastings criteria,  
  $A(x'|x) = \min\left\{1, \frac{p(x')}{p(x)}\left|\frac{\partial x'}{\partial x}\right|\right\}$
:::

::: {.column width="34%"}
![](./assets/hmc/hmc-update-dark.svg)
:::

::::

[^v0]: 
    We **always** start by resampling the momentum,
    $v_{0} \sim \mathcal{N}(0, \mathbb{1})$

# {.centeredslide}

<section data-background-iframe="https://chi-feng.github.io/mcmc-demo/app.html"
          data-background-interactive>
</section>

# Issues with HMC

- What do we want in a good sampler?
  - **Fast mixing** (small autocorrelations)
  - **Fast burn-in** (quick convergence)

- Problems with HMC:
  - Energy levels selected randomly $\rightarrow$ **slow mixing**
  - Cannot easily traverse low-density zones $\rightarrow$ **slow convergence**

::: {layout-ncol=2}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/hmc_traj_eps025.svg)

![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/hmc_traj_eps05.svg)
:::

# L2HMC: Leapfrog Layer {.centeredslide}

:::: {.columns}

::: {.column width="35%"}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/update_steps.svg){.absolute  top="30" width="40%"}
:::

::: {.column width="65%"}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/leapfrog_layer_dark2.svg){width="100%"}
:::
::::

![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/network_functions.svg){.absolute top=440 width="100%"}

# {.centeredslide style="font-size:0.9em;"}

::: {.callout-caution title="L2HMC Update"}

1. Initialization:  
    - Resample: ${\mathbf{v} \sim \mathcal{N}(0, \mathbb{1})}$, ${d\sim\mathcal{U}(+, -)}$
    - Construct $\textcolor{#00CCFF}{\xi} =(\mathbf{x}, {\mathbf{v}}, {\pm})$

2. Generate [proposal]{.purple-text} $\xi^{\ast}$ by [initial $\xi$]{.blue-text} through $N_{\mathrm{LF}}$ leapfrog layers:  
  $$
  \textcolor{#00CCFF} \xi \hspace{1pt}\xrightarrow[]{\tiny{\mathrm{LF} \text{ layer}}}\xi_{1} \longrightarrow\cdots \longrightarrow \xi_{N_{\mathrm{LF}}} = \textcolor{#AE81FF}{\xi^{\ast}}
  $$
4. Compute the Metropolis-Hastings (MH) acceptance (with Jacobian $\mathcal{J}$)
  $$
  A({\textcolor{#AE81FF}{\xi^{\ast}}}|{\textcolor{#00CCFF}{\xi}})=
  \mathrm{min}\left\{1,
  \frac{p(\textcolor{#AE81FF}{\xi^{\ast}})}{p(\textcolor{#00CCFF}{\xi})}\mathcal{J}\left(\textcolor{#AE81FF}{\xi^{\ast}},\textcolor{#00CCFF}{\xi}\right)\right\}
  $$
5. `if training`:  
    - Evaluate the **loss function**[^loss] $\mathcal{L}\gets \mathcal{L}_{\theta}(\textcolor{#AE81FF}{\xi^{\ast}}, \textcolor{#00CCFF}{\xi})$ and backprop
6. Evaluate MH criteria and assign the next state in the chain according to
  $$
  \mathbf{x}_{i+1}\gets
  \begin{cases}
  \textcolor{#AE81FF}{\mathbf{x}^{\ast}} \small{\text{ w/ prob }} A(\textcolor{#AE81FF}{\xi^{\ast}}|\textcolor{#00CCFF}{\xi}) \hspace{26pt} ‚úÖ \\
  \textcolor{#00CCFF}{\mathbf{x}} \hspace{5pt}\small{\text{ w/ prob }} 1 - A(\textcolor{#AE81FF}{\xi^{\ast}}|{\textcolor{#00CCFF}{\xi}}) \hspace{10pt} üö´
  \end{cases}
  $$
:::

[^loss]: 
    For simple $\mathbf{x} \in \mathbb{R}^{2}$ example, $\mathcal{L}_{\theta} =
    A(\xi^{\ast}|\xi)\cdot \left(\mathbf{x}^{\ast} - \mathbf{x}\right)^{2}$

# Toy Example: GMM $\in \mathbb{R}^{2}$ {.centeredslide}

![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/iso_gmm_chains.svg){#fig-gmm width="100%"}

# Lattice Gauge Theory {.centeredslide}

::: {layout-ncol=2}

::: {style="text-align:left;"}

::: {.callout-note title="Link (gauge) Variables"}
[$$U_{\mu}(n) = e^{i x_{\mu}(n)},$$]{style="font-size: 1.2em;"}
[$$x_{\mu}(n) \in [-\pi,\pi)$$]{style="font-size: 1.2em;"}
:::

::: {.callout-important title="Wilson Action"}
[$$\begin{align*}
S_{\beta}(x) &= \beta\sum_{P} \cos \textcolor{#00CCFF}{x_{P}}, \text{ with } \\
\textcolor{#00CCFF}{x_{P}} &= \big[x_{\mu}(n) + x_{\nu}(n+\hat{\mu}) \\
&\hspace{20pt}- x_{\mu}(n+\hat{\nu})-x_{\nu}(n)\big]
\end{align*}$$]{style="font-size:1.2em;"}
:::

:::
![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/u1lattice.dark.svg){width="35%"}
:::

::: {.aside}
**Note:** $\textcolor{#00CCFF}{x_{P}}$ is the product of links around
$1\times 1$ square, called a "plaquette"
:::

# Physical Quantities {}

- To estimate physical quantities, we:
  - calculate physical observables at **increasing** spatial resolution
  - perform extrapolation to continuum limit

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/static/continuum.svg){.r-stretch}


# Topological Freezing {.centeredslide}

:::: {.columns}

::: {.column width="45%"}

$$Q = \frac{1}{2\pi}\sum_{P}\left\lfloor x_{P}\right\rfloor  \in \mathbb{Z}$$

::: {.callout-important title="Critical Slowing Down" style="text-align:left;"}
- $Q$ gets stuck!
    - as $\beta\longrightarrow \infty$:
        - $Q \longrightarrow \text{const.}$
        - $\delta Q = \left(Q^{\ast} - Q\right) \rightarrow 0 \textcolor{#FF5252}{\Longrightarrow}$
    - \# configs required to estimate errors  
    **grows exponentially**:
    [$\tau_{\mathrm{int}}^{Q} \longrightarrow \infty$]{.red-text}
:::

::: {.aside}
**Note:**
$\left\lfloor x_{P} \right\rfloor = x_{P} - 2\pi \left\lfloor\frac{x_{P} + \pi}{2\pi}\right\rfloor$
:::

:::

::: {.column width="45%"}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/critical_slowing_down.svg){width=85%}
:::

::::

# Loss Function

- Want to maximize the expected squared charge difference:

  $$\begin{equation*}
  \mathcal{L}(\theta) = \textcolor{#228BE6}{\mathbb{E}_{p(\xi)}}\big[-\textcolor{#FA5252}{{\delta Q}}^{2}_{\textcolor{#FA5252}{\mathbb{R}}}(\xi', \xi)\cdot A(\xi'|\xi)\big]
  \end{equation*}$$
  
- Where $\delta Q_{\mathbb{R}}$ is the _tunneling rate_:
  $$\begin{equation*}
  \textcolor{#FA5252}{\delta Q_{\mathbb{R}}}(\xi',\xi)=\left|Q_{\mathbb{R}}(x') - Q_{\mathbb{R}}(x)\right|
  \end{equation*}$$

- $A(\xi'|\xi)$ is the probability of accepting the proposal $\xi'$:
  $$\begin{equation*}
  A(\xi'|\xi) = \mathrm{min}\left( 1, \frac{p(\xi')}{p(\xi)}\left|\frac{\partial \xi'}{\partial \xi^{T}}\right|\right)
  \end{equation*}$$

# Integrated Autocorrelation time: $\tau_{\mathrm{int}}$ {.centeredslide}

:::: {.columns}

::: {.column width="33%" style="text-align:left; padding-top: 5%;"}
::: {.callout-important title="Comparison" style="text-align:left!important;"}
We can measure the performance by comparing $\tau_{\mathrm{int}}^{Q}$ for the
[**trained model**]{style="color:#FF2052;"} vs. [**HMC**]{style="color:#9F9F9F;"}.  
  
**Note**: [lower]{.red-text} is better
:::
:::

::: {.column width=50% style="align:top;"}
![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/autocorr_new.svg){width="90%"}
:::

::::

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/charge_histories.svg){.absolute top=400 left=0 width="100%" style="margin-bottom: 1em;margin-top: 1em;"}


# Integrated Autocorrelation Time {.centeredslide}

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/tint1.svg){width="100%"}


# Interpretation {.centeredslide}

:::: {.columns style="margin-left:1pt;"}

::: {.column width="36%"}

[Deviation in $x_{P}$]{.dim-text style="text-align:center; font-size:0.8em"}

:::

::: {.column width="30%"}

[Topological charge mixing]{.dim-text style="text-align:right; font-size:0.8em"}

:::

::: {.column width="32%"}

[Artificial influx of energy]{.dim-text style="text-align:right!important; font-size:0.8em;"}

:::

::::

::: {#fig-interpretation}

![Illustration of how different observables evolve over a
single L2HMC trajectory.](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/ridgeplots.svg){width="100%"}

:::


# Interpretation {.centeredslide}


::: {#fig-energy-ridgeplot layout-ncol=2 width="100%"}

![Average plaquette: $\langle x_{P}\rangle$ vs LF step](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/plaqsf_ridgeplot.svg){width="100%"}

![Average energy: $H - \sum\log|\mathcal{J}|$](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/Hf_ridgeplot.svg){width="100%"}

The trained model artifically increases the energy towards
the middle of the trajectory, allowing the sampler to tunnel between isolated
sectors.
:::

# Plaquette analysis: $x_{P}$ {.centeredslide}

:::: {.columns}

::: {.column width="55%"}

[Deviation from $V\rightarrow\infty$ limit,  $x_{P}^{\ast}$]{.dim-text style="text-align:center; font-size:0.9em;"}
:::

::: {.column width="45%"}

[Average $\langle x_{P}\rangle$, with $x_{P}^{\ast}$ (dotted-lines)]{.dim-text style="text-align:right!important; font-size:0.9em;"}
:::

::::

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/plaqsf_vs_lf_step1.svg){width="100%"}

[<small><b>Fig.</b> Plot showing how **average plaquette**, $\left\langle
x_{P}\right\rangle$ varies over a single trajectory for models trained at
  different $\beta$, with varying trajectory lengths $N_{\mathrm{LF}}$</small>]{style="text-align:center;"}


# 2D $U(1)$ Model {.centeredslide}

:::: {.columns}

::: {.column width="45%" style="font-size:0.9em;"}
- `lattice.shape: [2, Nt, Nx]`
- maintain buffer of `Nb` chains,  
  updated in parallel
    - `x.shape: [Nb, 2, Nt, Nx]`
- to deal with $x \in \mathbb{C}$, stack as:  
  `[x.cos(), x.sin()]`
- final shapes:
    - `v.shape: [Nb, 2, Nt, Nx]`
    - `x.shape: [Nb, 2, 2, Nt, Nx]`
:::

::: {.column width="45%"}
![](assets/leapfrog-layer-minimal/leapfrog-layer-dark.svg)
:::

::::

# 4D $SU(3)$ Model {.centeredslide}

:::: {.columns}

::: {.column width="45%" style="font-size:0.9em;"}
- link variables: 
    - $U_{\mu}(x) \in SU(3)$,
- \+ conjugate momenta:
    - $P_{\mu}(x) \in \mathfrak{su}(3)$
- We maintain a batch of `Nb` lattices, all updated in parallel
    - `lattice.shape`:
        - [`[4, Nt, Nx, Ny, Nz, 3, 3]`]{style="font-size: 0.9em;"}
    - `batch.shape`:
        - [`[Nb, *lattice.shape]`]{style="font-size: 0.9em;"}
:::

::: {.column width="45%"}
![](./assets/leapfrog-layer-minimal/leapfrog-layer-dark.svg)
:::

::::

# 4D $SU(3)$ Model {.centeredslide}

:::: {.columns}

::: {.column width="45%"}
- link variables: 
    - $U_{\mu}(x) \in SU(3)$,
- \+ conjugate momenta:
    - $P_{\mu}(x) \in \mathfrak{su}(3)$
- We maintain a batch of `Nb` lattices, all updated in parallel
    - `lattice.shape`:
        - [`[4, Nt, Nx, Ny, Nz, 3, 3]`]{style="font-size: 0.9em;"}
    - `batch.shape`:
        - [`[Nb, *lattice.shape]`]{style="font-size: 0.9em;"}
:::

::: {.column width="45%"}
![](./assets/leapfrog-layer-default/leapfrog-layer-dark.svg)
:::

::::


# Notebook

<iframe data-src="https://nbviewer.org/github/saforem2/l2hmc-qcd/blob/dev/src/l2hmc/notebooks/l2hmc-2dU1.ipynb" width="100%" height="600" title="l2hmc-qcd"></iframe>


# Links + References

- This talk: [{{< fa brands github >}} `saforem2/lqcd-pasc23`](https://github.com/saforem2/lqcd-pasc23)
- Code repo [{{< fa brands github >}} `saforem2/l2hmc-qcd`](https://github.com/saforem2/l2hmc-qcd)
- Slides [{{< fa solid presentation-screen >}} saforem2.github.io/lqcd-pasc23](https://saforem2.github.io/lqcd-pasc23)

- [Animated background](https://www.quantamagazine.org/last-hope-experiment-finds-evidence-for-unknown-particles-20210407/)

- [Fermilab Muon g-2](https://muon-g-2.fnal.gov/index.html)

# Thank you!

::: {style="text-align:left;"}
[{{< fa solid home >}} `samforeman.me`](https://samforeman.me)
$\hspace{15pt}$[{{< fa brands twitter >}} `@saforem2`](https://www.twitter.com/saforem2)
$\hspace{15pt}$[{{< fa regular paper-plane >}} `foremans@anl.gov`](mailto:///foremans@anl.gov)
:::

::: {.callout-note title="Acknowledgements"}
This research used resources of the Argonne Leadership Computing Facility,  
which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357.
:::

# Acknowledgements

:::: {.columns}


::: {.column width="50%"}

- Collaborators:
   - Xiao-Yong Jin
   - James C. Osborn

- References:
   - [Link to HMC demo](https://chi-feng.github.io/mcmc-demo/app.html)
    - [Link to slides](https://saforem2.github.io/lqcd-pasc23/)
        - [{{< fa brands github >}} link to github with slides](https://github.com/saforem2/lqcd-pasc23)
   - [{{< fa brands github >}} Link to github](https://github.com/saforem2/l2hmc-qcd)
   - [{{< fa solid paper-plane >}} reach out!](mailto:foremans@anl.gov)
   - {{< fa solid book >}} [@Foreman:2021ljl]
   - {{< fa solid book >}} [@Foreman:2021rhs]
   - {{< fa solid book >}} [@Boyda:2022nmh]
   - {{< fa solid book >}} [@Shanahan:2022ifi]

:::

::: {.column width="50%"}

- Huge thank you to:
   - Yannick Meurice
   - Norman Christ
   - Akio Tomiya
   - Luchang Jin
   - Chulwoo Jung
   - Peter Boyle
   - Taku Izubuchi
   - ECP-CSD group
   - ALCF Staff + Datascience Group

:::

::::

# Extras

## {.centeredslide background-color="white"}

![](https://upload.wikimedia.org/wikipedia/commons/0/00/Standard_Model_of_Elementary_Particles.svg)

# HMC 

```{mermaid}
flowchart TD
  v("ùíó") --> G1{"ùúû"}
  x("ùíô") -. "‚àÇùëÜ/‚àÇùíô" -.-> G1{"ùúû"}
  x --> L{"ùú¶"}
  G1 -.-> L{"ùú¶"}
  G1 --> G2{"ùúû"}
  L -.-> G2
  L ---> x'("ùíô'")
  G2 --> v'("ùíó'")
  style x  color:#805AC1
  style x' color:#805AC1
  style v' color:#308E40
  style v color:#308E40
  style L color:#A64F00
  style G1 color:#ec407a
  style G2 color:#ec407a
  classDef default fill:#1c1c1c%%,stroke:#2c2c2c,stroke-width:1px;
```

## Python

```{python}
#| code-fold: true
#| echo: true
import numpy as np
x = np.random.rand()
print(x)
```

::: {.notes}
Speaker notes go here.
:::

## Python {.scrollable}

For a demonstration of a line plot on a polar axis, see @fig-polar

```{python}
#| label: fig-polar
#| fig-cap: "A line plot on a polar axis"
#| echo: true
#| code-fold: false
#| output-location: slide
import numpy as np
import matplotlib.pyplot as plt

plt.rcParams.update({
    'axes.facecolor': 'none',
    'figure.facecolor': 'none',
    'savefig.facecolor': 'none',
    'savefig.format': 'svg',
    'axes.edgecolor': 'none',
    'axes.grid': True,
    'axes.labelcolor': '#666',
    'axes.titlecolor': '#666',
    'grid.color': '#666',
    'text.color': '#666',
    'grid.linestyle': '--',
    'grid.linewidth': 0.5,
    'grid.alpha': 0.4,
    'xtick.color': 'none',
    'ytick.color': 'none',
    'xtick.labelcolor': '#666',
    'legend.edgecolor': 'none',
    'ytick.labelcolor': '#666',
    'savefig.transparent': True,
})

r = np.arange(0, 2, 0.01)
theta = 2 * np.pi * r
fix, ax = plt.subplots(
    subplot_kw = {'projection': 'polar'}
)
assert isinstance(ax, plt.PolarAxes)
ax.plot(theta, r)
ax.set_rticks([0.5, 1., 1.5, 2.])
ax.grid(True)
plt.show()
```

## Figures with Subcaptions

```{python}
#| label: fig-charts
#| echo: true
#| fig-cap: "Charts"
#| fig-subcap: 
#|   - "First"
#|   - "Second"
#| layout-ncol: 2

import matplotlib.pyplot as plt
plt.plot([1,23,2,4])
plt.show()

plt.plot([8,65,23,90])
plt.show()
```

## HMC Mermaid

```{mermaid}
flowchart TB
  v --> G1
  x -.-> G1
  x --> L
  G1 -.-> L
  G1 -.-> G2
  L -.-> G2
  L --> x'
  G2 --> v'
```

## Testing Callouts

::: {.callout-note title="Note"}
Testing note callouts with `default` appearance
:::

::: {.callout-tip title="Tip"}
Testing tip callout with `default` appearance
:::

::: {.callout-caution title="Caution"}
Testing tip callout with `default` appearance
:::

::: {.callout-warning title="Warning"}
Testing warning callout with `default` appearance
:::

::: {.callout-important title="Important"}
Testing important callout with `default` appearance
:::

# References {style="line-height:1.2em;"}
