---
# title: "Generative Modeling and Efficient Sampling (for LQCD)"
# affiliation: "Argonne National Laboratory"
author: "Sam Foreman"
date: "2023-06-26"
bibliography: references.bib
format:
  revealjs:
    title-block-style: none
    slide-number: c/t
    title-slide-style: pandoc
    chalkboard:
      buttons: false
    auto-animate: true
    reference-location: section
    touch: true
    # loop: true
    pause: false
    # classoption: fleqn
    # fig-responsive: true
    footnotes-hover: true
    citations-hover: true
    preview-links: true
    controls-tutorial: true
    controls: false
    logo: "https://raw.githubusercontent.com/saforem2/anl-job-talk/main/docs/assets/anl.svg"
    history: false
    # margin: 0.15
    theme: [dark, custom.scss]
      # - light: [light, custom.scss]
    css: [css/default.css, css/callouts.css, css/code-callout.css]
    menu:
      width: "half"
    # menu:
    #   side: right
    #   width: wide
    self-contained: false
    embed-resources: false
    self-contained-math: false
    center: true
    highlight-style: "atom-one"
    default-image-extension: svg
    code-line-numbers: true
    code-overflow: scroll
    html-math-method: katex
    fig-align: center
    execute:
      freeze: auto
    mermaid:
      theme: dark
resources:
  - slides.pdf
---

# {.title-slide .centeredslide background-iframe="https://saforem2.github.io/grid-worms-animation/" loading="lazy"}

<!-- ::: {style="text-shadow: 0px 0px 10px RGBA(0, 0, 0, 0.45); background-color: rgba(22,22,22,0.33); border-radius: 10px; text-align:center; box-shadow:RGBA(0, 0, 0, 0.25) 0px 5px 15px; padding-top: 0.25em; padding-bottom: 0.25em;"} -->
::: {style="text-shadow: 0px 0px 10px RGBA(0, 0, 0, 0.66); background-color: rgba(22,22,22,0.75); border-radius: 10px; text-align:center; box-shadow:RGBA(0, 0, 0, 0.25) 0px 5px 15px; padding: 0px; padding-left: 1%; padding-right: 1%; max-width: min-content; min-width: max-content; margin-left: auto; margin-right: auto; padding-top: 0.2em; padding-bottom: 0.2em; line-height: 1.5em!important;"}
<span style="color:#939393; font-size:1.5em; font-weight: bold;">Generative Modeling \& Efficient Sampling</span>  
<span style="color:#777777; font-size:1.2em; font-weight: bold;">(for Lattice QCD)</span>  
[<br>&nbsp;]{style="padding-bottom: 1em;"}  
[{{< fa solid home >}}](https://samforeman.me) Sam Foreman  
[Xiao-Yong Jin, James C. Osborn]{.dim-text style="font-size:0.8em;"}  
[[{{< fa brands github >}} `saforem2/lqcd-pasc23`](https://github.com/saforem2/lqcd-pasc23)]{style="font-size:0.8em;"}
:::

::: footer
[2023-06-26]{.dim-text}
[@ [PASC23](https://pasc23.pasc-conference.org/)]{.dim-text}
<!-- [{{< fa brands github >}} `saforem2/l2hmc-qcd`](https://github.com/saforem2/l2hmc-qcd) -->
:::


# Standard Model {auto-animate="true"}

:::: {.columns}

::: {.column width="60%"}
- [{{< fa solid bolt >}}]{.yellow-text} Electricity & Magnetism [{{< fa solid magnet >}}]{.red-text}
- <span class="purple">{{< fa solid atom >}}</span> Quantum Field Theory
  - Nuclear interactions
    - Strong + Weak Force
    - Observed particles
  - Quantum Chromodynamics (**QCD**):
    - Quark / gluon interactions in the nuclueus
    - Analytic progress is _difficult_...[^progress]
      - Lattice QCD to the rescue! 🚀
- [**known to be incomplete!**]{.green-text}
:::

::: {.column width="40%"}

<!-- ![](https://github.com/saforem2/physicsSeminar/raw/main/assets/static/nucleus.svg){width="40%" style="text-align:right; margin-left:22%;"} -->

::: {#fig-feynman}

![](https://github.com/saforem2/physicsSeminar/raw/main/assets/static/feynman.svg){width="100%"}

Feynman diagram for
$$e^{+} + e^{-} \rightarrow 2\gamma$$
:::

:::

::::

[^progress]: Completely stalled ?

::: footer
[{{< fa brands github >}} `saforem2/lqcd-pasc23`](https://github.com/saforem2/lqcd-pasc23)
:::

## {.centeredslide background-video="https://d2r55xnwy6nx47.cloudfront.net/uploads/2021/04/Muon_2560_Lede.mp4" background-video-loop="true" background-video-muted="true"}

::: {style="text-shadow: 0px 0px 10px black; background-color: rgba(22,22,22,0.33); border-radius: 10px; text-align:center; box-shadow:RGBA(0, 0, 0, 0.7) 0px 5px 15px; padding: 0px; padding-left: 1%; padding-right: 1%; max-width: min-content; min-width: max-content; margin-left: auto; margin-right: auto; padding-top: 0.2em; padding-bottom: 0.2em;"}
[Magnetic Moment of the Muon]{style="font-size: 1.75em; font-weight: bold;"}

::: {style="font-size: 1.5em; margin-top: 0pt; margin-bottom: 0pt; border:2px solid #00CCFF; border-radius:8px; margin-left:auto; margin-right:auto; min-width: max-content; max-width: min-content; padding-left: 1%; padding-right: 1%; background-color: rgba(22,22,22,0.75); "}
$a_{\mu} = \frac{(g_{\mu} - 2)}{2}$
:::

$a_{\mu}^{\mathrm{exp}} - a_{\mu}^{\mathrm{SM}} = \left(25.1 \pm 5.9\right)\cdot 10^{-10}$

**can Lattice QCD resolve this?**  

:::

## [Fermilab: Muon g-2](https://vms.fnal.gov/gallery/view?id=41) {style="top:0; font-size:0.75em;"}

::: {.panel-tabset}

### The Ring

::: {#fig-ring}
![](https://mod.fnal.gov/mod/stillphotos/2017/0100/17-0188-17.hr.jpg){width="75%" fig-align="center"}

The Muon g-2 ring sits in its detector hall amidst electronics racks, the muon beamline, and other equipment. This impressive experiment operates at negative 450 degrees Fahrenheit and studies the precession (or wobble) of muons as they travel through the magnetic field.
:::

### In transit

::: {#fig-in-transit}
![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0222-15D.hr.jpg){width="75%" fig-align="center"}

In the summer of 2013, the Muon g-2 team successfully transported a 50-foot-wide electromagnet from Long Island to the Chicago suburbs in one piece. The move took 35 days and traversed 3,200 miles over land and sea.
:::

### Almost Home

![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0235-18D.hr.jpg){width="80%" fig-align="center"}

### Arrival

::: {#fig-arrival}
![](https://mod.fnal.gov/mod/stillphotos/2013/0200/13-0244-11D.hr.jpg){width="80%" fig-align="center"}

 Thousands of people followed the move of the ring, and thousands were on hand to greet it upon its arrival at Fermilab.
:::

:::

## Tension

::: {style="font-size:0.75em; text-align: inherit; margin-left: inherit;"}
> Obviously, an independent cross-check of the BMW lattice result for
> $a_{\mu}^{\mathrm{hvp, LO}}$ with sub-percent precision is badly needed.&nbsp;  
> --- {{< fa solid book >}} [@wittig2023progress]
:::

::: {#fig-tension}

![](assets/tension.png){fig-align="center" width="50%"}

[Full cartoon](https://github.com/saforem2/lqcd-pasc23/blob/main/assets/mu2cartoon.png)
:::

# Markov Chain Monte Carlo (MCMC) {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width="50%"}

::: {.callout-note title="Goal" style="text-align:left;!important"}
Generate **independent** samples $\{x_{i}\}$, such that[^notation]
$$\{x_{i}\} \sim p(x) \propto e^{-S(x)}$$
where $S(x)$ is the _action_ (or potential energy)
:::

- Want to calculate observables $\mathcal{O}$:  
  $\left\langle \mathcal{O}\right\rangle \propto \int \left[\mathcal{D}x\right]\hspace{4pt} {\mathcal{O}(x)\, p(x)}$

:::

::: {.column width="49%"}
![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/normal_distribution.dark.svg)
:::

::::

If these were <span style="color:#00CCFF;">independent</span>, we could approximate:
  $\left\langle\mathcal{O}\right\rangle \simeq \frac{1}{N}\sum^{N}_{n=1}\mathcal{O}(x_{n})$  
  $$\sigma_{\mathcal{O}}^{2} = \frac{1}{N}\mathrm{Var}{\left[\mathcal{O} (x)
  \right]}\Longrightarrow \sigma_{\mathcal{O}} \propto \frac{1}{\sqrt{N}}$$

[^notation]: Here, $\sim$ means "is distributed according to"

# Markov Chain Monte Carlo (MCMC) {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width="50%"}

::: {.callout-note title="Goal" style="text-align:left;!important"}
Generate **independent** samples $\{x_{i}\}$, such that[^notation]
$$\{x_{i}\} \sim p(x) \propto e^{-S(x)}$$
where $S(x)$ is the _action_ (or potential energy)
:::

- Want to calculate observables $\mathcal{O}$:  
  $\left\langle \mathcal{O}\right\rangle \propto \int \left[\mathcal{D}x\right]\hspace{4pt} {\mathcal{O}(x)\, p(x)}$

:::

::: {.column width="49%"}
![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/normal_distribution.dark.svg)
:::

::::

Instead, nearby configs are [correlated]{.red-text}, and we incur a factor of
$\textcolor{#FF5252}{\tau^{\mathcal{O}}_{\mathrm{int}}}$:
  $$\sigma_{\mathcal{O}}^{2} =
  \frac{\textcolor{#FF5252}{\tau^{\mathcal{O}}_{\mathrm{int}}}}{N}\mathrm{Var}{\left[\mathcal{O}
  (x) \right]}$$
<!-- - If these were <span style="color:#00CCFF;">independent</span>, we could approximate: -->
<!--   $\left\langle\mathcal{O}\right\rangle \simeq \frac{1}{N}\sum^{N}_{n=1}\mathcal{O}(x_{n})$   -->
<!--   and the variance on this estimator is then -->
<!--   $$\sigma_{\mathcal{O}}^{2} = \frac{1}{N}\mathrm{Var}{\left[\mathcal{O} (x) -->
<!--   \right]}\Longrightarrow \sigma_{\mathcal{O}} \propto \frac{1}{\sqrt{N}}$$ -->

[^notation]: Here, $\sim$ means "is distributed according to"

<!-- ::: {aside} -->
<!-- [Autocorrelation time estimation](https://dfm.io/posts/autocorr/) -->
<!-- ::: -->


# Hamiltonian Monte Carlo (HMC)[^hmc] {.centeredslide auto-animate="true"}

- Want to (sequentially) construct a chain of states:
  $$x_{0} \rightarrow x_{1} \rightarrow x_{i} \rightarrow \cdots \rightarrow x_{N}\hspace{10pt}$$

  such that, as $N \rightarrow \infty$:
  $$\left\{x_{i}, x_{i+1}, x_{i+2}, \cdots, x_{N} \right\} \xrightarrow[]{N\rightarrow\infty} p(x)
  \propto e^{-S(x)}$$

::: {.callout-tip title="Trick" style="display:inline!important;"}
  - Introduce [fictitious]{.green-text} momentum $v \sim \mathcal{N}(0, \mathbb{1})$
    - Normally distributed **independent** of $x$, i.e.
  $$\begin{align*}
    p(x, v) &\textcolor{#02b875}{=} p(x)p(v) \propto e^{-S{(x)}} e^{-\frac{1}{2} v^{T}v}
   	= e^{-\left[S(x) + \frac{1}{2} v^{T}{v}\right]}
   	\textcolor{#02b875}{=} e^{-H(x, v)}
  \end{align*}$$
:::

[^hmc]: Fun fact: HMC was _originally_ invented for LQCD! [@Duane:1987de]
<!-- [Hybrid Monte Carlo, Duane et. al Phys.Lett.B 195 (1987)](https://www.sciencedirect.com/science/article/pii/037026938791197X?via=ihub) -->


# Hamiltonian Monte Carlo (HMC) {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width="55%"}

- [**Idea**]{.green-text}: Evolve the $(\dot{x}, \dot{v})$ system to get new states $\{x_{i}\}$❗

- Write the **joint distribution** $p(x, v)$:
  $$
  p(x, v) \propto e^{-S[x]} e^{-\frac{1}{2}v^{T} v} = e^{-H(x, v)}
  $$
:::

::: {.column width="45%"}

::: {.callout-tip title="Hamiltonian Dynamics"}
$H = S[x] + \frac{1}{2} v^{T} v \Longrightarrow$
$$\dot{x} = +\partial_{v} H,
\,\,\dot{v} = -\partial_{x} H$$
:::

:::

::::

::: {#fig-hmc-traj}

![](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/hmc1.svg){.r-stretch}

Overview of HMC algorithm
:::

# Leapfrog Integrator (HMC) {.centeredslide auto-animate="true"}

:::: {.columns style="text-align:center;"}

::: {.column width="48%"}

::: {.callout-tip title="Hamiltonian Dynamics" style="font-size:1.1em;"}
$\left(\dot{x}, \dot{v}\right) = \left(\partial_{v} H, -\partial_{x} H\right)$
:::

::: {.callout-note title="Leapfrog Step"}
`input` $\,\left(x, v\right) \rightarrow \left(x', v'\right)\,$ `output`

$$\begin{align*}
\tilde{v} &:= \textcolor{#F06292}{\Gamma}(x; v)\hspace{2.2pt} = v - \frac{\varepsilon}{2} \partial_{x} S(x) \\
x' &:= \textcolor{#FD971F}{\Lambda}(x; \tilde{v}) \, =  x + \varepsilon \, \tilde{v} \\
v' &:= \textcolor{#F06292}{\Gamma}(x'; \tilde{v}) = \tilde{v} - \frac{\varepsilon}{2} \partial_{x} S(x')
\end{align*}$$

:::

::: {.callout-warning title="Warning!" style="text-align:left;"}
[Resample $v_{0} \sim \mathcal{N}(0, \mathbb{1})$]{style="text-align:left!important;"}  
[at the [beginning]{.yellow-text} of each trajectory]{style="text-align:left;"}
:::

::: {style="font-size:0.8em; margin-left:13%;"}
[**Note**: $\partial_{x} S(x)$ is the _force_]{.dim-text}
:::

:::

::: {.column width="49%" style="text-align:left; margin-left:2%;"}
![](./assets/hmc/hmc-update-light.svg){width=60%}
:::
::::

# HMC Update {auto-animate="true"}

:::: {.columns}

::: {.column width="65%"}
- We build a trajectory of $N_{\mathrm{LF}}$ **leapfrog steps**[^v0]
  $$\begin{equation*}
  (x_{0}, v_{0})%
  \rightarrow (x_{1}, v_{1})\rightarrow \cdots%
  \rightarrow (x', v')
  \end{equation*}$$

- And propose $x'$ as the next state in our chain
<!-- - which is _accepted_ (or rejected) via Metroplis-Hastings[^accept] -->
<!-- - $x'$ is proposed with probability $A(x'|x)$[^accept] -->
<!-- - Use $x'$ as our proposal in the Metropolis-Hastings accept / reject, $A(x'|x)$ -->

$$\begin{align*}
  \textcolor{#F06292}{\Gamma}: (x, v) \textcolor{#F06292}{\rightarrow} v' &:= v - \frac{\varepsilon}{2} \partial_{x} S(x) \\
  \textcolor{#FD971F}{\Lambda}: (x, v) \textcolor{#FD971F}{\rightarrow} x' &:= x + \varepsilon v
\end{align*}$$

- We then accept / reject $x'$ using Metropolis-Hastings criteria,  
  $A(x'|x) = \min\left\{1, \frac{p(x')}{p(x)}\left|\frac{\partial x'}{\partial x}\right|\right\}$

:::

::: {.column width="30%"}

![](./assets/hmc/hmc-update-light.svg)

:::
::::

[^v0]: We **always** start by resampling the momentum, $v_{0} \sim
\mathcal{N}(0, \mathbb{1})$


# HMC Demo {.centeredslide}

::: {#fig-hmc-demo}

<iframe data-src="https://chi-feng.github.io/mcmc-demo/app.html" width="90%" height="500" title="l2hmc-qcd"></iframe>

HMC Demo
:::

# Issues with HMC {style="font-size:0.9em;"}

- What do we want in a good sampler?
  - **Fast mixing** (small autocorrelations)
  - **Fast burn-in** (quick convergence)

- Problems with HMC:
  - Energy levels selected randomly $\rightarrow$ **slow mixing**
  - Cannot easily traverse low-density zones $\rightarrow$ **slow convergence**

::: {#fig-hmc-issues layout-ncol=2}
![HMC Samples with $\varepsilon=0.25$](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/hmc_traj_eps025.svg)

![HMC Samples with $\varepsilon=0.5$](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/hmc_traj_eps05.svg)

HMC Samples generated with varying step sizes $\varepsilon$
:::

# Can we do better[^l2hmc]? {.centeredslide}

::: {.callout-tip title="L2HMC"}

- Generalize HMC by introducing 6 functions:  
    - $x$-update: 
      $$\psi_{\theta}: (x, v) \longrightarrow \left(s_{x},\, t_{x},\, q_{x}\right)$$
    - $v$-update:
      $$\varphi_{\theta}: (x, v) \longrightarrow \left(s_{v},\, t_{v},\, q_{v}\right)$$
      where $\psi_{\theta}, \varphi_{\theta}$ are NNs, parameterized by weights
    $\theta$  

  <!-- which are used in a (modified) HMC update to update $(x, v) \rightarrow (x', v')$ -->
- These functions, $$\left(s_{k}, t_{k}, q_{k}\right) \quad \text{ with } \quad
k \in \{x, v\}$$ are then used in a generalized leapfrog update to generate
$(x, v) \longrightarrow (x', v')$

:::

[^l2hmc]: {{< fa solid book >}}[@Foreman:2021ixr; @Foreman:2021rhs]

# L2HMC: Leapfrog Layer {.centeredslide}

:::: {.columns}

::: {.column width="35%"}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/update_steps.svg){.absolute  top="30" width="40%"}
:::

::: {.column width="65%"}
![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/leapfrog_layer_dark2.svg){width="100%"}
:::
::::

![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/network_functions.svg){.absolute top=440 width="100%"}


<!-- # L2HMC: Leapfrog Layer (alt.) -->
<!---->
<!-- ::: {layout="[[1, 1], [4]]" layout-valign="top"} -->
<!---->
<!-- ![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/update_steps.svg){} -->
<!---->
<!-- ![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/leapfrog_layer_dark2.svg){width="100%"} -->
<!---->
<!-- ![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/drawio/network_functions.svg){} -->
<!---->
<!-- Leapfrog Layer -->
<!-- ::: -->
<!---->

# {.centeredslide}

::: {.callout-caution title="Algorithm: L2HMC Update"}

1. `input`: $\mathbf{x}$  

    - Resample ${\mathbf{v} \sim \mathcal{N}(0,
     \mathbb{1})}$, ${d\sim\mathcal{U}(+, -)}$, and construct
     $\textcolor{#00CCFF}{\xi} =(\mathbf{x}, {\mathbf{v}}, {\pm})$

2. `forward`: Generate [proposal $\xi^{\ast}$]{.purple-text} by passing [initial $\xi$]{.blue-text} through $N_{\mathrm{LF}}$ leapfrog layers  
  $$\textcolor{#00CCFF} \xi \hspace{1pt}\xrightarrow[]{\tiny{\mathrm{LF} \text{ layer}}}\xi_{1} \longrightarrow\cdots \longrightarrow \xi_{N_{\mathrm{LF}}} = \textcolor{#AE81FF}{\xi^{\ast}}$$

    - Compute the Metropolis-Hastings (MH) acceptance (with Jacobian $\mathcal{J}$)
      $$\begin{equation}
      A({\textcolor{#AE81FF}{\xi^{\ast}}}|{\textcolor{#00CCFF}{\xi}})=
      \mathrm{min}\left\{1,
      \frac{p(\textcolor{#AE81FF}{\xi^{\ast}})}{p(\textcolor{#00CCFF}{\xi})} \left| \mathcal{J}\left(\textcolor{#AE81FF}{\xi^{\ast}},\textcolor{#00CCFF}{\xi}\right)\right| \right\}
      \end{equation}$$

5. `backward` (if training):  
    - Evaluate the **loss function**[^loss] $\mathcal{L}\gets \mathcal{L}_{\theta}(\textcolor{#AE81FF}{\xi^{\ast}}, \textcolor{#00CCFF}{\xi})$ and backprop
6. `return`: Evaluate MH criteria $(1)$ and return accepted config, $\mathbf{x}_{i+1}$
  $$\mathbf{x}_{i+1}\gets
  \begin{cases}
  \textcolor{#AE81FF}{\mathbf{x}^{\ast}} \small{\text{ w/ prob }} A(\textcolor{#AE81FF}{\xi^{\ast}}|\textcolor{#00CCFF}{\xi}) \hspace{26pt} ✅ \\
  \textcolor{#00CCFF}{\mathbf{x}} \hspace{5pt}\small{\text{ w/ prob }} 1 - A(\textcolor{#AE81FF}{\xi^{\ast}}|{\textcolor{#00CCFF}{\xi}}) \hspace{10pt} 🚫
  \end{cases}$$

:::

[^loss]: 
    For simple $\mathbf{x} \in \mathbb{R}^{2}$ example, $\mathcal{L}_{\theta} =
    A(\xi^{\ast}|\xi)\cdot \left(\mathbf{x}^{\ast} - \mathbf{x}\right)^{2}$

# Toy Example: GMM $\in \mathbb{R}^{2}$ {.centeredslide}

![](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/iso_gmm_chains.svg){#fig-gmm width="100%"}

# Lattice Gauge Theory (2D $U(1)$) {.centeredslide}

:::: {.columns layout-valign="top"}

::: {.column width="50%"}

::: {style="text-align:center;"}

::: {.callout-note title="Link Variables"}
$$U_{\mu}(n) = e^{i x_{\mu}(n)}\in \mathbb{C},\quad \text{where}\quad$$
$$x_{\mu}(n) \in [-\pi,\pi)$$
:::

::: {}

::: {.callout-important title="Wilson Action"}
$$S_{\beta}(x) = \beta\sum_{P} \cos \textcolor{#00CCFF}{x_{P}},$$

$$\textcolor{#00CCFF}{x_{P}} = \left[x_{\mu}(n) + x_{\nu}(n+\hat{\mu})
- x_{\mu}(n+\hat{\nu})-x_{\nu}(n)\right]$$
:::

[**Note**: $\textcolor{#00CCFF}{x_{P}}$ is the product of
links around $1\times 1$ square, called a ["plaquette"]{.blue-text}]{.dim-text style=font-size:0.8em;}
:::

:::

:::

::: {.column width="50%"}

![2D Lattice](https://raw.githubusercontent.com/saforem2/deep-fridays/main/assets/u1lattice.dark.svg){width="80%"}

:::

::::

# Physical Quantities

- To estimate physical quantities, we:
  - calculate physical observables at **increasing** spatial resolution
  - perform extrapolation to continuum limit

::: {#fig-continuum}
![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/static/continuum.svg){.r-stretch}

Increasing the physical resolution ($a \rightarrow 0$) allows us to make
predictions about numerical values of physical quantities in the continuum
limit.
:::


# Topological Freezing {.centeredslide}

:::: {.columns}

::: {.column width="45%"}

::: {style="text-align:left; font-size: 0.9em;"}
**Topological Charge**:
$$Q = \frac{1}{2\pi}\sum_{P}\left\lfloor x_{P}\right\rfloor  \in \mathbb{Z}$$
:::

[**note:** $\left\lfloor x_{P} \right\rfloor = x_{P} - 2\pi
\left\lfloor\frac{x_{P} + \pi}{2\pi}\right\rfloor$]{.dim-text style="font-size:0.8em;"}

::: {.callout-important title="Critical Slowing Down" style="text-align:left;"}
- $Q$ gets stuck!
    - as $\beta\longrightarrow \infty$:
        - $Q \longrightarrow \text{const.}$
        - $\delta Q = \left(Q^{\ast} - Q\right) \rightarrow 0 \textcolor{#FF5252}{\Longrightarrow}$
    - \# configs required to estimate errors  
    **grows exponentially**:
    [$\tau_{\mathrm{int}}^{Q} \longrightarrow \infty$]{.red-text}
:::

:::

::: {.column width="45%"}

![Note $\delta Q \rightarrow 0$ at increasing
$\beta$](https://raw.githubusercontent.com/saforem2/l2hmc-dwq25/main/docs/assets/critical_slowing_down.svg){width="80%"}

<!-- Illustration of critical slowing down at increasing $\beta$. Note at $\beta = 7$, $Q$ remains stuck for the entire run. -->

:::

::::

# Loss Function

- Want to maximize the _expected_ squared charge difference[^charge-diff]:
  $$\begin{equation*}
  \mathcal{L}_{\theta}\left(\xi^{\ast}, \xi\right) =
  {\mathbb{E}_{p(\xi)}}\big[-\textcolor{#FA5252}{{\delta Q}}^{2}
  \left(\xi^{\ast}, \xi \right)\cdot A(\xi^{\ast}|\xi)\big]
  \end{equation*}$$

- Where:
    - $\delta Q$ is the _tunneling rate_:
      $$\begin{equation*}
      \textcolor{#FA5252}{\delta Q}(\xi^{\ast},\xi)=\left|Q^{\ast} - Q\right|
      \end{equation*}$$

    - $A(\xi^{\ast}|\xi)$ is the probability[^jacobian] of accepting the proposal $\xi^{\ast}$:
      $$\begin{equation*}
      A(\xi^{\ast}|\xi) = \mathrm{min}\left( 1,
      \frac{p(\xi^{\ast})}{p(\xi)}\left|\frac{\partial \xi^{\ast}}{\partial
      \xi^{T}}\right|\right)
      \end{equation*}$$

[^charge-diff]: Where $\xi^{\ast}$ is the _proposed_ configuration (prior to
Accept / Reject)
[^jacobian]: And $\left|\frac{\partial \xi^{\ast}}{\partial \xi^{T}}\right|$ is the
Jacobian of the transformation from $\xi \rightarrow \xi^{\ast}$

# Integrated Autocorrelation time: $\tau_{\mathrm{int}}$ {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width=50% style="align:top;"}
![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/autocorr_new.svg){width="90%"}
:::

::: {.column width="33%" style="text-align:left; padding-top: 5%;"}

::: {.callout-important title="Improvement" style="text-align:left!important;"}
We can measure the performance by comparing $\tau_{\mathrm{int}}$ for the
[**trained model**]{style="color:#FF2052;"} vs.
[**HMC**]{style="color:#9F9F9F;"}.  
  
**Note**: [lower]{style="color:#FF2052;"} is better
:::

:::

::::

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/charge_histories.svg){.absolute top=400 left=0 width="100%" style="margin-bottom: 1em;margin-top: 1em;"}


# Integrated Autocorrelation Time {.centeredslide auto-animate="true"}

::: {#fig-iat}
![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/tint1.svg){width="100%"}

Plot of the integrated autocorrelation time for both the trained model
(colored) and HMC (greyscale).
:::

# Interpretation {.centeredslide auto-animate="true"}

:::: {.columns style="margin-left:1pt;"}

::: {.column width="36%"}

[Deviation in $x_{P}$]{.dim-text style="text-align:center; font-size:0.8em"}

:::

::: {.column width="30%"}

[Topological charge mixing]{.dim-text style="text-align:right; font-size:0.8em"}

:::

::: {.column width="32%"}

[Artificial influx of energy]{.dim-text style="text-align:right!important; font-size:0.8em;"}

:::

::::

::: {#fig-interpretation}

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/ridgeplots.svg){width="100%"}

Illustration of how different observables evolve over a single L2HMC
trajectory.
:::


# Interpretation {.centeredslide auto-animate="true"}

::: {#fig-energy-ridgeplot layout-ncol=2 layout-valign="top"}

![Average plaquette: $\langle x_{P}\rangle$ vs LF step](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/plaqsf_ridgeplot.svg)

![Average energy: $H - \sum\log|\mathcal{J}|$](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/Hf_ridgeplot.svg)

The trained model artifically increases the energy towards
the middle of the trajectory, allowing the sampler to tunnel between isolated
sectors.
:::

# Plaquette analysis: $x_{P}$ {.centeredslide}

:::: {.columns}

::: {.column width="55%"}

[Deviation from $V\rightarrow\infty$ limit,  $x_{P}^{\ast}$]{.dim-text style="text-align:center; font-size:0.9em;"}
:::

::: {.column width="45%"}

[Average $\langle x_{P}\rangle$, with $x_{P}^{\ast}$ (dotted-lines)]{.dim-text style="text-align:right!important; font-size:0.9em;"}
:::

::::

::: {#fig-avg-plaq}

![](https://raw.githubusercontent.com/saforem2/physicsSeminar/main/assets/plaqsf_vs_lf_step1.svg){width="100%"}

Plot showing how **average plaquette**, $\left\langle x_{P}\right\rangle$
varies over a single trajectory for models trained at different $\beta$, with
varying trajectory lengths $N_{\mathrm{LF}}$
:::

# Comparison

::: {#fig-comparison layout-ncol=2}

![Trained model](https://saforem2.github.io/anl-job-talk/assets/dQint_eval.svg){#fig-eval}

![Generic HMC](https://saforem2.github.io/anl-job-talk/assets/dQint_hmc.svg){#fig-hmc}

Comparison of $\langle \delta Q\rangle = \frac{1}{N}\sum_{i=k}^{N} \delta Q_{i}$ for the
trained model [@fig-eval] vs. HMC [@fig-hmc]
:::


# 2D $U(1)$ Model {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width="45%" style="font-size:0.9em;"}
- `lattice.shape: [2, Nt, Nx]`
- maintain buffer of `Nb` chains,  
  updated in parallel
    - `x.shape: [Nb, 2, Nt, Nx]`
- to deal with $x \in \mathbb{C}$, stack as:  
  `[x.cos(), x.sin()]`
- final shapes:
    - `v.shape: [Nb, 2, Nt, Nx]`
    - `x.shape: [Nb, 2, 2, Nt, Nx]`
:::

::: {.column width="45%"}
![](assets/leapfrog-layer-minimal/leapfrog-layer-dark.svg)
:::

::::

# 4D $SU(3)$ Model[^wip] {.centeredslide auto-animate="true"}

:::: {.columns}

::: {.column width="45%" style="font-size:0.9em;"}
- link variables: 
    - $U_{\mu}(x) \in SU(3)$,
- \+ conjugate momenta:
    - $P_{\mu}(x) \in \mathfrak{su}(3)$
- We maintain a batch of `Nb` lattices, all updated in parallel
    - `lattice.shape`:
        - [`[4, Nt, Nx, Ny, Nz, 3, 3]`]{style="font-size: 0.9em;"}
    - `batch.shape`:
        - [`[Nb, *lattice.shape]`]{style="font-size: 0.9em;"}
:::

::: {.column width="45%"}
![](./assets/leapfrog-layer-minimal/leapfrog-layer-dark.svg)
:::

::::

[^wip]: WIP

# Thank you!

::: {style="text-align:left;"}
[{{< fa solid home >}} `samforeman.me`](https://samforeman.me)  
[{{< fa brands github >}} `saforem2`](https://github.com/saforem2)  
[{{< fa brands twitter >}} `@saforem2`](https://www.twitter.com/saforem2)  
[{{< fa regular paper-plane >}} `foremans@anl.gov`](mailto:///foremans@anl.gov)
:::

::: {.callout-note title="Acknowledgements"}
This research used resources of the Argonne Leadership Computing Facility,  
which is a DOE Office of Science User Facility supported under Contract DE-AC02-06CH11357.
:::

## Acknowledgements

:::: {.columns}


::: {.column width="50%"}

- **Links**:
   - [{{< fa brands github >}} Link to github](https://github.com/saforem2/l2hmc-qcd)
   - [{{< fa solid paper-plane >}} reach out!](mailto:foremans@anl.gov)

- **References**:
   - [Link to HMC demo](https://chi-feng.github.io/mcmc-demo/app.html)
    - [Link to slides](https://saforem2.github.io/lqcd-pasc23/)
        - [{{< fa brands github >}} link to github with slides](https://github.com/saforem2/lqcd-pasc23)
   - {{< fa solid book >}} [@Foreman:2021ljl; @Foreman:2021rhs; @Foreman:2021ixr]
   - {{< fa solid book >}} [@Boyda:2022nmh; @Shanahan:2022ifi]

:::

::: {.column width="50%"}

- Huge thank you to:
  - Yannick Meurice
  - Norman Christ
  - Akio Tomiya
  - Luchang Jin
  - Chulwoo Jung
  - Peter Boyle
  - Taku Izubuchi
  - ECP-CSD group
  - [**ALCF Staff + Datascience Group**]{.red-text}

:::

::::

## Links + References

- This talk: [{{< fa brands github >}} `saforem2/lqcd-pasc23`](https://github.com/saforem2/lqcd-pasc23)
- Code repo [{{< fa brands github >}} `saforem2/l2hmc-qcd`](https://github.com/saforem2/l2hmc-qcd)
- Slides [{{< fa solid presentation-screen >}} saforem2.github.io/lqcd-pasc23](https://saforem2.github.io/lqcd-pasc23)
- [Animated background (g - 2)](https://www.quantamagazine.org/last-hope-experiment-finds-evidence-for-unknown-particles-20210407/)
- [Title Slide Background (worms) animation](https://saforem2.github.io/grid-worms-animation/)

- [Fermilab Muon g-2](https://muon-g-2.fnal.gov/index.html)

## References {style="line-height:1.2em;"}

::: {#refs}
:::

# Extras

## {background-color="white"}

::: {#fig-notebook}

<iframe data-src="https://nbviewer.org/github/saforem2/l2hmc-qcd/blob/SU3/src/l2hmc/notebooks/l2hmc-2dU1.ipynb" width="100%" height="650" title="l2hmc-qcd"></iframe>

Jupyter Notebook
:::


## Networks 2D $U(1)$

- Stack gauge links as `shape`$\left(U_{\mu}\right)$` =[Nb, 2, Nt, Nx]` $\in \mathbb{C}$

  $$ x_{\mu}(n) ≔ \left[\cos(x), \sin(x)\right]$$

  with `shape`$\left(x_{\mu}\right)$` = [Nb, 2, Nt, Nx, 2]` $\in \mathbb{R}$

- $x$-Network:
    - $\Lambda^{\pm}_{k}(x, v) \rightarrow \left[s^{k}_{x}, t^{k}_{x}, q^{k}_{x}\right]$

- $v$-Network:
    - $\Gamma_{k}^{\pm}(x, v) \rightarrow \left[s^{k}_{v}, t^{k}_{v}, q^{k}_{v}\right]$


## $v$-update (pt. 1)

- `network`[^sigma]: $\left(x, \partial_{x} S(x)\right) \coloneqq \left(x, F \right)\rightarrow (s_{v}, t_{v}, q_{v})$, where
  $$\begin{align*}
  h_{0} &= \sigma\left( w_{x} x + w_{F} F + b \right) \\
  h_{1} &= \sigma\left( w_{1} h_{0} + b_{1} \right) \\
  &\vdots \\
  h_{n} &= \sigma\left(w_{n} h_{n-1} + b_{n}\right) \longrightarrow \\
  \end{align*}$$
  $$s_{v} = \lambda_{s} \tanh\left(w_{s} h_{n} + b_{s}\right), \quad
  t_{v} = w_{t} z + b_{t}, \quad
  q_{v} = \lambda_{q}w_{q} z + b_{q}$$

[^sigma]: $\sigma(\cdot)$ denotes an activation function

## $v$-update (pt. 2) {style="font-size:0.9em;"}

- Network outputs[^constants]:
  $$s_{v} = \lambda_{s} \tanh\left(w_{s}\, h_{n} + b_{s}\right), \quad
  t_{v} = w_{t} h_{n} + b_{t}, \quad
  q_{v} = \lambda_{q}\tanh\left(w_{q} h_{n} + b_{q}\right)$$

- Use these to update $\Gamma^{\pm}: (x, v) \rightarrow \left(x, v_{\pm}\right)$[^inverse]:

    - [forward]{style="color:#FF5252"} $(d = \textcolor{#FF5252}{+})$:
      $$\Gamma^{\textcolor{#FF5252}{+}}(x, v) \coloneqq v_{\textcolor{#FF5252}{+}} = v \cdot e^{\frac{\varepsilon}{2} s_{v}} - \frac{\varepsilon}{2}\left[ F \cdot e^{\varepsilon q_{v}} + t_{v} \right]$$


    - [backward]{style="color:#1A8FFF;"} $(d = \textcolor{#1A8FFF}{-})$: 
      $$\Gamma^{\textcolor{#1A8FFF}{-}}(x, v) \coloneqq v_{\textcolor{#1A8FFF}{-}} = e^{-\frac{\varepsilon}{2} s_{v}} \left\{v + \frac{\varepsilon}{2}\left[ F \cdot e^{\varepsilon q_{v}} + t_{v} \right]\right\}$$


[^constants]: $\lambda_{s},\, \lambda_{q} \in \mathbb{R}$ are trainable parameters
[^inverse]: Note that $\left(\Gamma^{+}\right)^{-1} = \Gamma^{-}$, i.e. $\Gamma^{+}\left[\Gamma^{-}(x, v)\right] = \Gamma^{-}\left[\Gamma^{+}(x, v)\right] = (x, v)$

## Annealing Schedule

- Introduce an _annealing schedule_ during the training phase:

  $$\left\{ \gamma_{t}  \right\}_{t=0}^{N} = \left\{\gamma_{0}, \gamma_{1},
  \ldots, \gamma_{N-1}, \gamma_{N} \right\}$$

  where $\gamma_{0} < \gamma_{1} < \cdots < \gamma_{N} \equiv 1$, and $\left|\gamma_{t+1} - \gamma_{t}\right| \ll 1$  

- [**Note**]{.green-text}: 
    - for $\left|\gamma_{t}\right| < 1$, this rescaling helps to reduce the
      height of the energy barriers $\Longrightarrow$
    - easier for our sampler to explore previously inaccessible regions of the phase space

## LQCD @ ALCF (2008)

> The Blue Gene/P at the ALCF has tremendously accelerated the generation of the gauge configurations—in many cases, by a factor of 5 to 10 over what has been possible with other machines. Significant progress has been made in simulations with two different implementations of the quarks—domain wall and staggered[^lqcd2008]  
> <br> &nbsp;
> --- [Mike Papka]{.green-text}, 2008

[^lqcd2008]: [Argonne Leadership Computing Facility • 2008 Annual Report](https://publications.anl.gov/anlpubs/2009/12/65724.pdf)

## {.centeredslide background-color="white"}

![](https://upload.wikimedia.org/wikipedia/commons/0/00/Standard_Model_of_Elementary_Particles.svg)

## HMC 

```{mermaid}
flowchart LR
  v("v") --> G1{"Γ"}
  x0("x") -. "∂𝑆 / ∂𝒙" -.-> G1{"Γ"}
  G1 -.-> L{"Λ"}
  x0 --> L{"Λ"}
  G1 --> G2{"Γ"}
  L -.-> G2
  L ---> x'("x*")
  G2 --> v'("v*")
  style x0  color:#805AC1
  style x' color:#805AC1
  style v' color:#308E40
  style v color:#308E40
  style L color:#FD971F
  style G1 color:#ec407a
  style G2 color:#ec407a
  classDef default fill:#1c1c1c
```
